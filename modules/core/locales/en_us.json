{
    "core.help.admin.add": "Set members as bot administrators, implement the function of managing the robot without setting members as group administrators. It's no longer needed to set up it when you are already a group administrator.",
    "core.help.admin.ban": "Limit someone to use bot in the group.",
    "core.help.admin.desc": "Commands available to group administrators.",
    "core.help.admin.list": "View all bot administrators.",
    "core.help.admin.remove": "Remove bot administrator from member.",
    "core.help.admin.unban": "Remove limit someone to use bot in the group.",
    "core.help.alias.add": "Add custom command alias.",
    "core.help.alias.list": "View custom command alias.",
    "core.help.alias.list.legacy": "View custom command alias. (Legacy)",
    "core.help.alias.remove": "Remove custom command alias.",
    "core.help.alias.reset": "Reset custom command alias.",
    "core.help.help": "View help list.",
    "core.help.help.detail": "View details of a module.",
    "core.help.help.legacy": "View help list. (Legacy)",
    "core.help.leave": "Let the bot leave the group.",
    "core.help.locale.desc": "Control bot language.",
    "core.help.locale.set": "Set bot running language.",
    "core.help.module.disable": "Disable single/multiple module(s).",
    "core.help.module.disable_all": "Disable all modules.",
    "core.help.module.enable": "Enable single/multiple module(s).",
    "core.help.module.enable_all": "Enable all modules.",
    "core.help.module.list": "View all available modules.",
    "core.help.module.list.legacy": "View all available modules. (Legacy)",
    "core.help.mute": "Make the bot stop sending message.",
    "core.help.option.module.g": "Perform global operations of the channels.",
    "core.help.petal": "Get the number of petals in the current group.",
    "core.help.ping": "Get bot status.",
    "core.help.prefix.add": "Add custom command prefix.",
    "core.help.prefix.list": "View custom command prefixes.",
    "core.help.prefix.remove": "Remove custom command prefix.",
    "core.help.prefix.reset": "Reset custom command prefix.",
    "core.help.setup.check": "Set up whether to display command check prompts.",
    "core.help.setup.desc": "Set up bot actions.",
    "core.help.setup.timeoffset": "Set the time offset.",
    "core.help.setup.typing": "Set up whether to display input prompts.",
    "core.help.version": "View bot version.",
    "core.help.whoami": "Get the ID of the user account that sent the command inside the bot.",
    "core.message.abuse.ban.success": "Successfully banned ${user}.",
    "core.message.abuse.check.warns": "${user} has been warned ${warns} time(s).",
    "core.message.abuse.clear.success": "Successfully cleared warning for ${user}.",
    "core.message.abuse.revoke.success": "Successfully removed ${counts} warning(s) for ${user}. This user has been warned ${warn_counts} time(s).",
    "core.message.abuse.unban.success": "Successfully unbanned ${user}.",
    "core.message.abuse.untempban.success": "Successfully removed temporary limit on ${user}.",
    "core.message.abuse.warn.success": "Successfully warned ${user} ${counts} time(s). This user has been warned ${warn_counts} time(s).",
    "core.message.admin.add.success": "Success: ${user} was set as bot administrator.",
    "core.message.admin.already": "This member is already a bot administrator.",
    "core.message.admin.ban.already": "This member has been banned from using bot.",
    "core.message.admin.ban.not_yet": "This member has not been banned from using bot.",
    "core.message.admin.ban.self": "You cannot do this for yourself!",
    "core.message.admin.invalid": "Invalid ID format. The format should be \"${target}|<User ID>\". Use \"${prefix}whoami\" to view user ID.",
    "core.message.admin.list": "Bot administrators manually set in the current group: ",
    "core.message.admin.list.none": "There are currently no manual bot administrators.",
    "core.message.admin.remove.success": "Success: Removed ${user} from bot administrator.",
    "core.message.alias.add.already": "\"${alias}\" alias already exists in custom alias list.",
    "core.message.alias.add.invalid_prefix": "The command corresponding to the added alias must start with a command prefix. Please check your input.",
    "core.message.alias.add.success": "Custom command alias added: ${alias} -> ${command}",
    "core.message.alias.list": "Custom command alias list: ",
    "core.message.alias.list.none": "The custom command alias list is empty.",
    "core.message.alias.list.table.header.alias": "Alias",
    "core.message.alias.list.table.header.command": "Command",
    "core.message.alias.remove.not_found": "\"${alias}\" alias does not exist in custom alias list.",
    "core.message.alias.remove.success": "Removed custom command alias: ${alias}",
    "core.message.alias.reset.success": "The custom command alias has been reset.",
    "core.message.analytics.counts": "Number of commands have executed (from ${first_record}): ${counts}\nNumber of commands have executed today: ${counts_today}",
    "core.message.analytics.days": "Last 30 days for command \"${module}\" calls (from ${first_record}): ",
    "core.message.analytics.days.total": "Last 30 days for all command calls (from ${first_record}): ",
    "core.message.analytics.disabled": "Analytics command is not enabled.",
    "core.message.analytics.year": "Last year for command \"${module}\" calls (from ${first_record}): ",
    "core.message.analytics.year.total": "Last year for all command calls (from ${first_record}): ",
    "core.message.config.write.failed": "Failed. Try to use escaped quotes or check the input.",
    "core.message.forward_msg.disable": "Forward message disabled.",
    "core.message.forward_msg.disabled": "Forward message has been disabled.",
    "core.message.forward_msg.enable": "Forward message enabled.",
    "core.message.help.author.type1": "Module author: ",
    "core.message.help.author.type2": "Module Author",
    "core.message.help.helpdoc.address": "Online module document: ${url}",
    "core.message.help.legacy.availables": "Currently available module(s):",
    "core.message.help.legacy.base": "Base Command: ",
    "core.message.help.legacy.external": "Module Extension Command: ",
    "core.message.help.legacy.more_information": "Use \"${prefix}help <module name>\" to view details.\nUse \"${prefix}module list\" to view all available modules.",
    "core.message.help.more_information": "Here are the help documents shown only show the enabled module(s). If you need to view the help documents of all modules, please use \"${prefix}module list\".",
    "core.message.help.more_information.document": "You can also consult the web documentation for help:\n${url}",
    "core.message.help.more_information.donate": "If you have sufficient funds, welcome to sponsor us: \n${url}",
    "core.message.help.not_found": "This module may not exist. Please check your input.",
    "core.message.help.regex.detail": "(${msg})",
    "core.message.help.regex.no_information": "No description",
    "core.message.help.support_regex": "This module supports regular expressions. The message will match with the following: ",
    "core.message.help.table.header.alias": "Command Alias",
    "core.message.help.table.header.base": "Base Module List",
    "core.message.help.table.header.external": "Extended Module List",
    "core.message.help.table.header.help": "Help",
    "core.message.leave.success": "Goodbye.",
    "core.message.locale": "Current language: ${lang}",
    "core.message.locale.reload.failed": "Failed to reload the following string: ${detail}",
    "core.message.locale.set.invalid": "Invalid language code. Supported language code(s): ${langlist}",
    "core.message.locale.set.prompt": "Use \"${prefix}locale <language code>\" to set the language.\nSupported language code(s): ${langlist}\nGo to Crowdin and help with translation:\nhttps://www.crowdin.com/project/akari-bot",
    "core.message.module.disable.already": "Failed: Module \"${module}\" is disabled.",
    "core.message.module.disable.base": "Failed: \"${module}\" is a base module, thus cannot be disabled.",
    "core.message.module.disable.not_found": "Failed: Module \"${module}\" does not exist.",
    "core.message.module.disable.qqchannel_global.success": "Success: Disabled module \"${module}\" for all text channels.",
    "core.message.module.disable.success": "Success: Disabled module \"${module}\".",
    "core.message.module.enable.already": "Failed: Module \"${module}\" is already enabled.",
    "core.message.module.enable.base": "Failed: \"${module}\" is a base module, thus cannot be disabled.",
    "core.message.module.enable.not_found": "Failed: Module \"${module}\" does not exist.",
    "core.message.module.enable.qqchannel_global.success": "Success: Enabled module \"${module}\" for all text channels.",
    "core.message.module.enable.success": "Success: Enabled module \"${module}\".",
    "core.message.module.load.error": "An error occurred: This module has been loaded or does not exist.",
    "core.message.module.load.failed": "Failed to load module.",
    "core.message.module.load.success": "Successfully loaded module(s): ${module}",
    "core.message.module.module.help": "Help information for module \"${module}\": ",
    "core.message.module.recommends": "It is recommended to enable the following module(s) at the same time: \n${modules}\nProceed?",
    "core.message.module.reload.base.failed": "Failed: \"${module}\" is a base module. To prevent exceptions in the bot, this operation has been blocked.",
    "core.message.module.reload.base.confirm": "You are trying to reload the base modules! Continue?",
    "core.message.module.reload.base.success": "Successfully reloaded the base modules.",
    "core.message.module.reload.confirm": "This operation will reload the following modules at the same time: \n${modules}\nContinue?",
    "core.message.module.reload.failed": "Failed to reload module.",
    "core.message.module.reload.no_more": "No remaining files were found.",
    "core.message.module.reload.success": "Successfully reloaded module(s):\n${module}",
    "core.message.module.reload.unbound": "Failed: Module \"${module}\" does not bound.",
    "core.message.module.reload.with": "And ${reloadCnt} files under these module(s).",
    "core.message.module.unload.base": "Failed: \"${module}\" is a base module, thus cannot be unloaded.",
    "core.message.module.unload.confirm": "This operation will unload all modules related to it and disable them completely after the next restart (not including cross-reference). Continue?",
    "core.message.module.unload.error": "An error occurred: The module does not exist.",
    "core.message.module.unload.success": "Successfully unloaded module: ${module}",
    "core.message.module.unload.unavailable.confirm": "This module cannot be loaded due to an error. This operation will disable this module completely after the next restart. Continue?",
    "core.message.module.unsupported_language": "Note: Module\"${module}\" does not support the current language. This module may not display content under the current language correctly.",
    "core.message.mute.disable": "Successfully unmuted.",
    "core.message.mute.enable": "Successfully muted.",
    "core.message.petal": "${petal} petal(s) remain in the group ${group}.",
    "core.message.petal.modify": " Successfully modified ${add_petal} petals for target group ${group}, now ${group} has ${petal} petals.",
    "core.message.petal.modify.self": " Successfully modified ${add_petal} petals for this group, now this group has ${petal} petals.",
    "core.message.petal.no_petals": "There are not enough petals in the group. ",
    "core.message.petal.self": "${petal} petal(s) remain in this group.",
    "core.message.ping.detail": "System startup time: ${system_boot_time}\nBot is running: ${bot_running_time}\nPython version: ${python_version}\nProcessor model: ${cpu_brand}\nCurrent processor usage: ${cpu_usage}%\nPhysical memory: ${ram}M Utilized: ${ram_percent}%\nSwap memory: ${swap}M Utilized: ${swap_percent}%\nDisk capacity: ${disk_space}G/${disk_space_total}G",
    "core.message.ping.failed": "Failed to fetch.",
    "core.message.prefix.add.already": "This command prefix already exists in the custom prefix list.",
    "core.message.prefix.add.success": "Custom command prefix added: ${prefix}",
    "core.message.prefix.list": "Custom command prefix: ${prefixes}",
    "core.message.prefix.list.none": "The custom command prefix is empty.",
    "core.message.prefix.remove.not_found": "This command prefix does not exist in the custom prefix list.",
    "core.message.prefix.remove.success": "Custom command prefix removed: ${prefix}",
    "core.message.prefix.reset": "The custom command prefix has been reset.",
    "core.message.purge.empty": "The cache directory is empty.",
    "core.message.purge.success": "Successfully purged caches.",
    "core.message.raise": "Test exception.",
    "core.message.restart.prompt": "Since the bot is restarting, your command execution have been forcibly cancelled.\nPlease re-execute the command later.",
    "core.message.restart.restarting": "Restarting...",
    "core.message.restart.timeout": "Waiting timeout, force restarting...",
    "core.message.restart.wait": "There are ${count} command(s) being executed. The bot will restart after the execution.",
    "core.message.resume.clear": "All messages cleared.",
    "core.message.resume.done": "Resume complete.",
    "core.message.resume.nothing": "No messages to be resumed.",
    "core.message.resume.processing": "Resuming ${counts} message(s)...",
    "core.message.resume.skip": "Skip a message, resuming ${counts} message(s)...",
    "core.message.set.confirm.init": "This group is not initialized. Are you sure you want to do it?",
    "core.message.set.help.option.success": "The following parameters were set for the object: ${k} -> ${v}",
    "core.message.set.invalid": "Invalid ID format.",
    "core.message.set.module.success": "The following modules were successfully configured for the object: ",
    "core.message.setup.check.disable": "Check prompt disabled.",
    "core.message.setup.check.enable": "Check prompt enabled.",
    "core.message.setup.timeoffset.invalid": "Invalid time offset.",
    "core.message.setup.timeoffset.success": "The time offset has been set to UTC${offset}.",
    "core.message.setup.typing.disable": "Input prompt disabled.",
    "core.message.setup.typing.enable": "Input prompt enabled.",
    "core.message.superuser.invalid": "Invalid ID format. The format should be \"${target}|<User ID>\".",
    "core.message.update.failed": "Failed to fetch update from GitHub. Please try again later.",
    "core.message.version": "Current bot version: ${commit}",
    "core.message.version.unknown": "Unable to get version. This instance may not be deployed using Git.",
    "core.message.whoami": "Your ID: ${senderid}\nConversation ID: ${targetid}",
    "core.message.whoami.admin": "(You have admin permission for this conversation)",
    "core.message.whoami.botadmin": "(You have bot admin permission for this conversation)",
    "core.message.whoami.superuser": "(You have superuser permission)"
}