{
    "calc.help.desc": "Safely evaluate Python ast expressions.",
    "calc.help.option.bin": "Convert to Binary: bin(268) -> 0b100001100",
    "calc.help.option.bool": "Convert to Boolean: bool(1) -> True",
    "calc.help.option.complex": "Convert to Complex Number: complex(1) -> (1 + 0j)",
    "calc.help.option.divide": "Division: 6 / 3 -> 2",
    "calc.help.option.equal": "Equal to: 1 == 1 -> True",
    "calc.help.option.float": "Convert to Floating Point Number: float(1) -> 1.0",
    "calc.help.option.greater_equal": "Greater than or equal to: 1 >= 2 -> False",
    "calc.help.option.hex": "Convert to Hexadecimal: hex(268) -> 0x10c",
    "calc.help.option.int": "Convert to Integer: int(1.5) -> 1",
    "calc.help.option.is": "x and y are the same object: 1 is 1 -> True",
    "calc.help.option.less_equal": "Less than or equal to: 1 <= 2 -> True",
    "calc.help.option.minus": "Subtract / Negative Sign: 3 - 1 -> 2",
    "calc.help.option.modulo": "Modulo: 5 % 2 ->1",
    "calc.help.option.more": "More available operators and functions",
    "calc.help.option.move_left": "x 左移 y 位（相当于 x * (2 ** y)，y < 10000）：1 << 5 -> 32",
    "calc.help.option.move_right": "x 右移 y 位（相当于 x / (2 ** y)，y < 10000）：32 >> 5 -> 1",
    "calc.help.option.multiply": "Multiplication: 2 * 3 -> 6",
    "calc.help.option.not": "Not: not True -> False",
    "calc.help.option.oct": "Convert to Octal: oct(268) -> 0ox14",
    "calc.help.option.plus": "Sum / Positive Sign: 1 + 2 -> 3",
    "calc.help.option.power": "x to the power of y (y must not be over 4e+6 due to performance limits): 2 ** 3 -> 8",
    "calc.help.option.rand": "Random float between 0 and 1: rand() -> 0.578901583644823",
    "calc.help.option.randint": "Random integer less than x: randint(6) -> 5",
    "calc.help.option.str": "Convert to String: str(1) -> \"1\"",
    "calc.help.option.xor": "Bitwise xor: 1 ^ 1 -> 0",
    "calc.message.invalid": "Invalid expression: ${expr}",
    "calc.message.running_time": "Calculating time: ${time}ms / 10000ms. ",
    "calc.message.time_out": "Calculation timeout."
}